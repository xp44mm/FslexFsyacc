%{%}
topTypeWithTypeConstraints :
    | topType {}
    | topType when typeConstraints {}
topType :
    | topTupleType "->" topType {}
    | topTupleType {}
topTupleType :
    | topAppType "*" topTupleType {}
    | topAppType {}
topAppType :
    | attributes appType ":" appType {}
    | attributes "?" IDENT ":" appType {}
    | attributes appType {}
    | appType ":" appType {}
    | "?" IDENT ":" appType {}
    | appType {}
appType :
    | appType HIGH_PRECEDENCE_BRACK_APP "[" ","* "]" {}
    | appType appTypeConPower {}
    | "(" appTypePrefixArguments ")" appTypeConPower {}
    | powerType {}
    | typar ":>" typ {}
    | "_" ":>" typ {}
appTypeConPower :
    | appTypeCon ["^" "^-"] atomicRationalConstant {}
    | appTypeCon {}
appTypeCon :
    | path {}
    | typar {}
typar :
    | "'" IDENT {}
    | "^" IDENT {}
appTypePrefixArguments :
    | typeArgActual "," typeArgActual typeArgListElements {}
typeArgActual :
    | typ {}
    | typ "=" typ {}
typ :
    | tupleType "->" typ {}
    | tupleType {}
tupleType :
    | appType "*" tupleOrQuotTypeElements {}
    | "/" tupleOrQuotTypeElements {}
    | appType "/" tupleOrQuotTypeElements {}
    | appType {}
tupleOrQuotTypeElements :
    | appType "*" tupleOrQuotTypeElements {}
    | appType "/" tupleOrQuotTypeElements {}
    | appType {}
typeArgListElements :
    | typeArgListElements "," typeArgActual {}
    | (*empty*) {}
powerType :
    | atomTypeOrAnonRecdType {}
    | atomTypeOrAnonRecdType ["^" "^-"] atomicRationalConstant {}
atomTypeOrAnonRecdType :
    | atomType {}
    | anonRecdType {}
atomType :
    | "#" atomType {}
    | appTypeConPower {}
    | "_" {}
    | "(" typ ")" {}
    | struct "(" appType "*" tupleOrQuotTypeElements ")" {}
    | rawConstant {}
    | null {}
    | const atomicExpr {}
    | FALSE {}
    | TRUE {}
    | appTypeCon typeArgsNoHpaDeprecated {}
    | atomType "." path {}
    | atomType "." path typeArgsNoHpaDeprecated {}
typeArgsNoHpaDeprecated :
    | typeArgsActual {}
    | HIGH_PRECEDENCE_TYAPP typeArgsActual {}
typeArgsActual :
    | "<" typeArgActual "," typeArgActual typeArgListElements ">" {}
    | "<" typeArgActual ">" {}
    | "<" ">" {}
anonRecdType :
    | struct braceBarFieldDeclListCore {}
    | braceBarFieldDeclListCore {}
braceBarFieldDeclListCore :
    | "{|" recdFieldDeclList "|}" {}
recdFieldDeclList :
    | recdFieldDecl seps recdFieldDeclList {}
    | recdFieldDecl seps? {}
recdFieldDecl :
    | attributes? fieldDecl {}
attributes? :
    | attributes {}
    | (*empty*) {}
fieldDecl :
    | mutable? access? IDENT ":" typ {}
access? :
    | (*empty*) {}
    | access {}
access :
    | private {}
    | public {}
    | internal {}
seps :
    | OBLOCKSEP {}
    | ";" {}
    | OBLOCKSEP ";" {}
    | ";" OBLOCKSEP {}
seps? :
    | seps {}
    | (*empty*) {}
typeConstraints :
    | typeConstraints and typeConstraint {}
    | typeConstraint {}
typeConstraint :
    | default typar ":" typ {}
    | typar ":>" typ {}
    | typar ":" struct {}
    | typar ":" IDENT struct {}
    | typar ":" null {}
    | typar ":" "(" classMemberSpfn ")" {}
    | "(" typeAlts ")" ":" "(" classMemberSpfn ")" {}
    | typar ":" delegate typeArgsNoHpaDeprecated {}
    | typar ":" IDENT typeArgsNoHpaDeprecated {}
    | typar ":" IDENT {}
    | appType {}
typeAlts :
    | typeAlts or appType {}
    | appType {}
