%{%}
typeAnnotWhenConstraints :
    | typeAnnot {}
    | typeAnnot when typeAnnotConstraints {}
typeAnnot :
    | tupleTypeAnnot "->" typeAnnot {}
    | tupleTypeAnnot {}
tupleTypeAnnot :
    | appTypeAnnot "*" tupleTypeAnnot {}
    | appTypeAnnot {}
appTypeAnnot :
    | appTypeAnnot "[" ","* "]" {}
    | appTypeAnnot appTypeAnnotContainer {}
    | atomTypeAnnot {}
    | typeParam ":>" typeAnnot {}
    | "_" ":>" typeAnnot {}
appTypeAnnotContainer :
    | longIdent {}
    | typeParam {}
longIdent :
    | IDENT {}
    | longIdent "." IDENT {}
typeParam :
    | "'" IDENT {}
    | "^" IDENT {}
atomTypeAnnot :
    | "#" atomTypeAnnot {}
    | appTypeAnnotContainer {}
    | "_" {}
    | "(" typeAnnot ")" {}
    | struct "(" tupleTypeAnnot ")" {}
    | appTypeAnnotContainer typeAnnotArgsActual {}
    | atomTypeAnnot "." longIdent {}
    | atomTypeAnnot "." longIdent typeAnnotArgsActual {}
    | braceBarFieldDeclListCoreAnnot {}
    | struct braceBarFieldDeclListCoreAnnot {}
typeAnnotArgsActual :
    | "<" typeAnnotArguments ">" {}
    | "<" ">" {}
typeAnnotArguments :
    | typeAnnotArguments "," typeAnnot {}
    | typeAnnot {}
braceBarFieldDeclListCoreAnnot :
    | "{|" recdFieldDeclAnnotList "|}" {}
recdFieldDeclAnnotList :
    | fieldDeclAnnot ";" recdFieldDeclAnnotList {}
    | fieldDeclAnnot ";"? {}
fieldDeclAnnot :
    | IDENT ":" typeAnnot {}
typeAnnotConstraints :
    | typeAnnotConstraints and typeAnnotConstraint {}
    | typeAnnotConstraint {}
typeAnnotConstraint :
    | typeParam ":>" typeAnnot {}
    | typeParam ":" null {}
    | typeParam ":" "(" memberSignatureConstraint ")" {}
    | "(" appTypeAnnotAlts ")" ":" "(" memberSignatureConstraint ")" {}
    | typeParam ":" struct {}
    | typeParam ":" not struct {}
    | default typeParam ":" typeAnnot {}
    | typeParam ":" delegate typeAnnotArgsActual {}
    | typeParam ":" IDENT typeAnnotArgsActual {}
    | typeParam ":" IDENT {}
    | appTypeAnnot {}
memberSignatureConstraint :
    | static? member memberSigName ":" typeAnnot {}
    | new ":" typeAnnot {}
memberSigName :
    | IDENT {}
    | memberSigOpName {}
memberSigOpName :
    | "(" operatorName ")" {}
    | "(*)" {}
operatorName :
    | PREFIX_OP {}
    | INFIX_STAR_STAR_OP {}
    | INFIX_COMPARE_OP {}
    | INFIX_AT_HAT_OP {}
    | INFIX_BAR_OP {}
    | INFIX_AMP_OP {}
    | PLUS_MINUS_OP {}
    | INFIX_STAR_DIV_MOD_OP {}
    | DOLLAR {}
    | ADJACENT_PREFIX_OP {}
    | MINUS {}
    | STAR {}
    | EQUALS {}
    | OR {}
    | LESS {}
    | GREATER {}
    | QMARK {}
    | AMP {}
    | AMP_AMP {}
    | BAR_BAR {}
    | COLON_EQUALS {}
    | FUNKY_OPERATOR_NAME {}
    | PERCENT_OP {}
    | DOT_DOT {}
    | DOT_DOT DOT_DOT {}
    | LQUOTE RQUOTE {}
appTypeAnnotAlts :
    | appTypeAnnotAlts or appTypeAnnot {}
    | appTypeAnnot {}
