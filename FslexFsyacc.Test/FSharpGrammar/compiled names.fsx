[] 	op_Nil
::	op_ColonColon
+	op_Addition
-	op_Subtraction
*	op_Multiply
/	op_Division
**	op_Exponentiation
@	op_Append	
^	op_Concatenate	
%	op_Modulus 
&&&	op_BitwiseAnd
|||	op_BitwiseOr
^^^	op_ExclusiveOr
<<<	op_LeftShift
~~~	op_LogicalNot
>>>	op_RightShift
~+	op_UnaryPlus
~-	op_UnaryNegation
=	op_Equality
<>	op_Inequality
<=	op_LessThanOrEqual
>=	op_GreaterThanOrEqual
<	op_LessThan
>	op_GreaterThan
?	op_Dynamic
?<-	op_DynamicAssignment
|>	op_PipeRight
||>	op_PipeRight2
|||>	op_PipeRight3
<|	op_PipeLeft
<||	op_PipeLeft2
<|||	op_PipeLeft3
!	op_Dereference
>>	op_ComposeRight
<<	op_ComposeLeft
<@ @>	op_Quotation
<@@ @@> op_QuotationUntyped
~%	op_Splice
~%%	op_SpliceUntyped
~&	op_AddressOf
~&&	op_IntegerAddressOf
||	op_BooleanOr
&&	op_BooleanAnd
+=	op_AdditionAssignment
-=	op_SubtractionAssignment
*=	op_MultiplyAssignment
/=	op_DivisionAssignment
..	op_Range
.. ..	op_RangeStep

Compiled names for other symbolic operators:
>	Greater
<	Less 
+	Plus
-	Minus
*	Multiply
=	Equals
~	Twiddle
%	Percent
.	Dot
&	Amp
|	Bar
@	At
#	Hash
^	Hat
!	Bang
?	Qmark
/	Divide
.	Dot
:	Colon
(	LParen
,	Comma
)	RParen
[	LBrack
]	RBrack 
