%{%}
typeArgument :
    | funtype {}
    | flexibletype {}
    | subtype {}
funtype :
    | tupletype "->" funtype {}
    | tupletype {}
tupletype :
    | apptype "*" tupletype {}
    | apptype {}
apptype :
    | atomtype ctortypes {}
atomtype :
    | "_" {}
    | typeParam {}
    | namedtype {}
    | anonRecordType {}
    | "(" typeArgument ")" {}
    | struct "(" tupletype ")" {}
    | struct anonRecordType {}
namedtype :
    | ctortype {}
    | ctortype "<" typeArguments ">" {}
ctortype :
    | longIdent {}
longIdent :
    | IDENT "." longIdent {}
    | IDENT {}
typeArguments :
    | typeArgument "," typeArguments {}
    | typeArgument {}
anonRecordType :
    | "{|" recdFieldDeclList "|}" {}
recdFieldDeclList :
    | fieldDecl ";" recdFieldDeclList {}
    | fieldDecl ";"? {}
fieldDecl :
    | IDENT ":" typeArgument {}
";"? :
    | ";" {}
    | (*empty*) {}
ctortypes :
    | ctortype ctortypes {}
    | (*empty*) {}
flexibletype :
    | "#" namedtype {}
    | "#" "(" apptype ")" {}
    | "#" "_" {}
subtype :
    | variabletype ":>" apptype {}
variabletype :
    | "_" {}
    | typeParam {}