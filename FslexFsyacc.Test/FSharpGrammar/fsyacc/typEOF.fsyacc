%{%}
typEOF :
    | typ EOF {}
typ :
    | tupleType "->" typ {}
    | tupleType {}
tupleType :
    | appType "*" tupleOrQuotTypeElements {}
    | ["*" "/" "%"] tupleOrQuotTypeElements {}
    | appType ["*" "/" "%"] tupleOrQuotTypeElements {}
    | appType {}
appType :
    | appType arrayTypeSuffix {}
    | appType HIGH_PRECEDENCE_BRACK_APP arrayTypeSuffix {}
    | appType appTypeConPower {}
    | "(" appTypePrefixArguments ")" appTypeConPower {}
    | powerType {}
    | typar ":>" typ {}
    | "_" ":>" typ {}
arrayTypeSuffix :
    | "[" "]" {}
    | "[" "," "]" {}
    | "[" "," "," "]" {}
    | "[" "," "," "," "]" {}
appTypeConPower :
    | appTypeCon ["@" "^"] atomicRationalConstant {}
    | appTypeCon {}
appTypeCon :
    | path {}
    | typar {}
path :
    | global {}
    | IDENT {}
    | path "." IDENT {}
typar :
    | "'" IDENT {}
    | ["@" "^"] IDENT {}
atomicRationalConstant :
    | atomicUnsignedRationalConstant {}
    | "-" atomicUnsignedRationalConstant {}
atomicUnsignedRationalConstant :
    | INT32 {}
    | "(" rationalConstant ")" {}
rationalConstant :
    | INT32 ["*" "/" "%"] INT32 {}
    | "-" INT32 ["*" "/" "%"] INT32 {}
    | INT32 {}
    | "-" INT32 {}
appTypePrefixArguments :
    | typeArgActual "," typeArgActual typeArgListElements {}
typeArgActual :
    | typ {}
    | typ "=" typ {}
    | typ "=" {}
typeArgListElements :
    | typeArgListElements "," typeArgActual {}
    | typeArgListElements "," {}
    | (*empty*) {}
powerType :
    | atomTypeOrAnonRecdType {}
    | atomTypeOrAnonRecdType ["@" "^"] atomicRationalConstant {}
atomTypeOrAnonRecdType :
    | atomType {}
    | anonRecdType {}
atomType :
    | "#" atomType {}
    | appTypeConPower {}
    | "_" {}
    | "(" typ ")" {}
    | struct "(" appType "*" tupleOrQuotTypeElements ")" {}
    | rawConstant {}
    | null {}
    | const atomicExpr {}
    | FALSE {}
    | TRUE {}
    | appTypeCon typeArgsNoHpaDeprecated {}
    | atomType "." path {}
    | atomType "." path typeArgsNoHpaDeprecated {}
tupleOrQuotTypeElements :
    | appType "*" tupleOrQuotTypeElements {}
    | appType ["*" "/" "%"] tupleOrQuotTypeElements {}
    | appType {}
rawConstant :
    | INT8 {}
    | UINT8 {}
    | INT16 {}
    | UINT16 {}
    | INT32 {}
    | UINT32 {}
    | INT64 {}
    | UINT64 {}
    | NATIVEINT {}
    | UNATIVEINT {}
    | IEEE32 {}
    | IEEE64 {}
    | CHAR {}
    | DECIMAL {}
    | BIGNUM {}
    | STRING {}
    | KEYWORD_STRING {}
    | BYTEARRAY {}
typeArgsNoHpaDeprecated :
    | typeArgsActual {}
    | HIGH_PRECEDENCE_TYAPP typeArgsActual {}
typeArgsActual :
    | "<" typeArgActualOrDummyIfEmpty "," typeArgActualOrDummyIfEmpty typeArgListElements ">" {}
    | "<" typeArgActual ">" {}
    | "<" ">" {}
typeArgActualOrDummyIfEmpty :
    | typeArgActual {}
    | (*empty*) {}
anonRecdType :
    | struct braceBarFieldDeclListCore {}
    | braceBarFieldDeclListCore {}
braceBarFieldDeclListCore :
    | "{|" recdFieldDeclList "|}" {}
recdFieldDeclList :
    | recdFieldDecl seps recdFieldDeclList {}
    | recdFieldDecl seps? {}
recdFieldDecl :
    | attributes? fieldDecl {}
attributes? :
    | attributes {}
    | (*empty*) {}
fieldDecl :
    | mutable? access? IDENT ":" typ {}
mutable? :
    | mutable {}
    | (*empty*) {}
access? :
    | (*empty*) {}
    | access {}
access :
    | private {}
    | public {}
    | internal {}
seps :
    | OBLOCKSEP {}
    | ";" {}
    | OBLOCKSEP ";" {}
    | ";" OBLOCKSEP {}
seps? :
    | seps {}
    | (*empty*) {}
