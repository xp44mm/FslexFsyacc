%{%}
signatureFile :
    | fileNamespaceSpecs EOF {}
fileNamespaceSpecs :
    | fileModuleSpec {}
    | fileModuleSpec fileNamespaceSpecList {}
fileModuleSpec :
    | opt_attributes opt_access moduleIntro moduleSpfnsPossiblyEmptyBlock {}
    | moduleSpfnsPossiblyEmptyBlock {}
opt_attributes :
    | attributes {}
    | (*empty*) {}
opt_access :
    | (*empty*) {}
    | access {}
access :
    | PRIVATE {}
    | PUBLIC {}
    | INTERNAL {}
moduleIntro :
    | MODULE opt_attributes opt_access opt_rec path {}
opt_rec :
    | REC {}
    | (*empty*) {}
path :
    | GLOBAL {}
    | IDENT {}
    | path DOT IDENT {}
moduleSpfnsPossiblyEmptyBlock :
    | moduleSpfnsPossiblyEmpty {}
    | OBLOCKBEGIN moduleSpfnsPossiblyEmpty OBLOCKEND opt_OBLOCKSEP {}
moduleSpfnsPossiblyEmpty :
    | moduleSpfns {}
    | (*empty*) {}
moduleSpfns :
    | moduleSpfn opt_topSeparators moduleSpfns {}
    | moduleSpfn opt_topSeparators {}
moduleSpfn :
    | hashDirective {}
    | valSpfn {}
    | opt_attributes opt_access moduleIntro colonOrEquals namedModuleAbbrevBlock {}
    | opt_attributes opt_access moduleIntro colonOrEquals moduleSpecBlock {}
    | opt_attributes opt_access TYPE tyconSpfn tyconSpfnList {}
    | opt_attributes opt_access exconSpfn {}
    | openDecl {}
valSpfn :
    | opt_attributes opt_access VAL opt_attributes opt_inline opt_mutable opt_access identOrOp opt_explicitValTyparDecls COLON topTypeWithTypeConstraints optLiteralValueSpfn {}
opt_inline :
    | INLINE {}
    | (*empty*) {}
opt_mutable :
    | MUTABLE {}
    | (*empty*) {}
identOrOp :
    | IDENT {}
    | opName {}
opName :
    | LPAREN operatorName RPAREN {}
    | LPAREN_STAR_RPAREN {}
    | LPAREN activePatternCaseNames BAR RPAREN {}
    | LPAREN activePatternCaseNames BAR UNDERSCORE BAR RPAREN {}
operatorName :
    | PREFIX_OP {}
    | INFIX_STAR_STAR_OP {}
    | INFIX_COMPARE_OP {}
    | INFIX_AT_HAT_OP {}
    | INFIX_BAR_OP {}
    | INFIX_AMP_OP {}
    | PLUS_MINUS_OP {}
    | INFIX_STAR_DIV_MOD_OP {}
    | DOLLAR {}
    | ADJACENT_PREFIX_OP {}
    | MINUS {}
    | STAR {}
    | EQUALS {}
    | OR {}
    | LESS {}
    | GREATER {}
    | QMARK {}
    | AMP {}
    | AMP_AMP {}
    | BAR_BAR {}
    | COLON_EQUALS {}
    | FUNKY_OPERATOR_NAME {}
    | PERCENT_OP {}
    | DOT_DOT {}
    | DOT_DOT DOT_DOT {}
    | LQUOTE RQUOTE {}
opt_explicitValTyparDecls :
    | explicitValTyparDecls {}
    | (*empty*) {}
explicitValTyparDecls :
    | opt_HIGH_PRECEDENCE_TYAPP LESS explicitValTyparDeclsCore opt_typeConstraints GREATER {}
opt_HIGH_PRECEDENCE_TYAPP :
    | HIGH_PRECEDENCE_TYAPP {}
    | (*empty*) {}
explicitValTyparDeclsCore :
    | typarDeclList COMMA DOT_DOT {}
    | typarDeclList {}
    | (*empty*) {}
typarDeclList :
    | typarDeclList COMMA typarDecl {}
    | typarDecl {}
typarDecl :
    | opt_attributes typar {}
opt_typeConstraints :
    | (*empty*) {}
    | WHEN typeConstraints {}
typeConstraints :
    | typeConstraints AND typeConstraint {}
    | typeConstraint {}
topTypeWithTypeConstraints :
    | topType {}
    | topType WHEN typeConstraints {}
optLiteralValueSpfn :
    | (*empty*) {}
    | EQUALS declExpr {}
    | EQUALS OBLOCKBEGIN declExpr OBLOCKEND opt_ODECLEND {}
opt_ODECLEND :
    | ODECLEND {}
    | (*empty*) {}
colonOrEquals :
    | COLON {}
    | EQUALS {}
namedModuleAbbrevBlock :
    | OBLOCKBEGIN path OBLOCKEND {}
    | path {}
moduleSpecBlock :
    | OBLOCKBEGIN moduleSpfns OBLOCKEND {}
    | OBLOCKBEGIN sigOrBegin moduleSpfnsPossiblyEmpty END OBLOCKEND {}
    | sigOrBegin moduleSpfnsPossiblyEmpty END {}
sigOrBegin :
    | SIG {}
    | BEGIN {}
tyconSpfn :
    | typeNameInfo EQUALS tyconSpfnRhsBlock {}
    | typeNameInfo opt_classSpfn {}
typeNameInfo :
    | opt_attributes tyconNameAndTyparDecls opt_typeConstraints {}
tyconNameAndTyparDecls :
    | opt_access path {}
    | opt_access prefixTyparDecls path {}
    | opt_access path postfixTyparDecls {}
prefixTyparDecls :
    | typar {}
    | LPAREN typarDeclList RPAREN {}
postfixTyparDecls :
    | opt_HIGH_PRECEDENCE_TYAPP LESS typarDeclList opt_typeConstraints GREATER {}
tyconSpfnRhsBlock :
    | OBLOCKBEGIN tyconSpfnRhs opt_OBLOCKSEP classSpfnMembers opt_classSpfn OBLOCKEND opt_classSpfn {}
    | tyconSpfnRhs opt_classSpfn {}
tyconSpfnRhs :
    | tyconDefnOrSpfnSimpleRepr {}
    | tyconClassSpfn {}
    | DELEGATE OF topType {}
tyconDefnOrSpfnSimpleRepr :
    | opt_attributes opt_access typ {}
    | opt_attributes opt_access unionTypeRepr {}
    | opt_attributes opt_access braceFieldDeclList {}
    | opt_attributes opt_access LPAREN HASH STRING HASH RPAREN {}
opt_OBLOCKSEP :
    | OBLOCKSEP {}
    | (*empty*) {}
classSpfnMembers :
    | classSpfnMembersAtLeastOne {}
    | (*empty*) {}
classSpfnMembersAtLeastOne :
    | classMemberSpfn opt_seps classSpfnMembers {}
opt_seps :
    | seps {}
    | (*empty*) {}
seps :
    | OBLOCKSEP {}
    | SEMICOLON {}
    | OBLOCKSEP SEMICOLON {}
    | SEMICOLON OBLOCKSEP {}
opt_classSpfn :
    | WITH classSpfnBlock declEnd {}
    | (*empty*) {}
classSpfnBlock :
    | OBLOCKBEGIN classSpfnMembers OBLOCKEND {}
    | classSpfnMembers {}
declEnd :
    | ODECLEND {}
    | OEND {}
    | END {}
tyconSpfnList :
    | AND tyconSpfn tyconSpfnList {}
    | (*empty*) {}
exconSpfn :
    | exconCore opt_classSpfn {}
exconCore :
    | EXCEPTION opt_attributes opt_access exconIntro exconRepr {}
exconIntro :
    | IDENT {}
    | IDENT OF unionCaseRepr {}
exconRepr :
    | (*empty*) {}
    | EQUALS path {}
openDecl :
    | OPEN path {}
    | OPEN TYPE appType {}
opt_topSeparators :
    | topSeparator opt_topSeparators {}
    | (*empty*) {}
topSeparator :
    | SEMICOLON {}
    | SEMICOLON_SEMICOLON {}
    | OBLOCKSEP {}
topSeparators :
    | topSeparator {}
    | topSeparator topSeparators {}
fileNamespaceSpecList :
    | fileNamespaceSpec fileNamespaceSpecList {}
    | fileNamespaceSpec {}
fileNamespaceSpec :
    | namespaceIntro deprecated_opt_equals fileModuleSpec {}
namespaceIntro :
    | NAMESPACE opt_rec path {}
deprecated_opt_equals :
    | EQUALS {}
    | (*empty*) {}